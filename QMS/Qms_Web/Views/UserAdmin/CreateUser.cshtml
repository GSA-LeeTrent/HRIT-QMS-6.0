@model Qms_Web.ViewModels.UserAdminFormVM;

@{
    if (@Model.Deactivatable)
    {
    <div class="w-75 mt-2 mb-1 text-right">
            <form asp-controller2="User2" asp-action="Deactivate" method="POST">
                <input type="hidden" asp-for="UserId" />
                <button class="btn btn-danger" type="submit">Deactivate</button>
            </form>
    </div>
    }
    if (@Model.Reactivatable)
    {
    <div class="w-75 mt-2 mb-1 text-right">
            <form asp-controller2="User2" asp-action="Reactivate" method="POST">
                <input type="hidden" asp-for="UserId" />
                <button class="btn btn-success" type="submit">Reactivate</button>
            </form>
    </div>
    }
}

    <h1 class="display-6 mt-4" style="font-size:1.9rem;">@Model.CardHeader</h1>
    <div class="card w-75">
        <div class="card-body">
            <form asp-controller="UserAdmin" asp-action="@Model.AspAction" method="POST" id="createOrUpdateUserForm">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="updateUserEmail">Email Address:</label>
                        <input type="email" class="form-control" id="createOrUpdateUserEmail" asp-for="EmailAddress">
                        <span asp-validation-for="EmailAddress" class="text-danger"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="updateUserDisplayName">Display Name:</label>
                        <input type="text" class="form-control" id="createOrUpdateUserDisplayName" asp-for="DisplayName">
                        <span asp-validation-for="DisplayName" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="updateUserOrganization" class="form-label">Organization:</label>
                        <select asp-for="OrgId" asp-items="ViewBag.ActiveOrganizations" class="form-select" id="createOrUpdateUserOrganization">
                            <option value="">-- Select Organization --</option>
                        </select>
                        <span asp-validation-for="OrgId" class="text-danger"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="updateUserManager" class="form-label">Manager:</label>
                        <select asp-for="ManagerId" asp-items="ViewBag.PotentialManagers" class="form-select" id="createOrUpdateUserManager">
                            <option value="">-- Select Manager --</option>
                        </select>
                    </div>
                </div>
                @if (@Model.Mutatatable)
                {
                    <input type="hidden" asp-for="UserId" />
                    <button class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary" type="submit">@Model.SubmitButtonLabel</button>
                    <a class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-secondary ml-1" asp-controller="UserAdmin" asp-action="Index">Cancel</a>
                }
                else
                {
                    <a class="btn btn btn-primary ml-1" asp-controller="User2" asp-action="Index">Done</a>
                }
            </form>
        </div>
    </div>

@section Scripts {
    <script>
        let createOrUpdateUserOrganization = document.getElementById("createOrUpdateUserOrganization");
        if (createOrUpdateUserOrganization) {
            createOrUpdateUserOrganization.addEventListener('change', function (event) {
                const selectedOrgId = createOrUpdateUserOrganization.options[createOrUpdateUserOrganization.selectedIndex].value;
                console.log(`[createOrUpdateUserOrganization][ChangeEventListener] => (selectedOrgId): ${selectedOrgId}`);

                let createOrUpdateUserManager = document.getElementById("createOrUpdateUserManager");
                if (createOrUpdateUserManager) {
                    createOrUpdateUserManager.innerHTML = "";
                    createOrUpdateUserManager.add(createOption("", "Working ..."));
        
                    $.ajax({
                        type: "GET",
                        url: "/api/ua/users",
                        data: {
                            orgId: selectedOrgId
                        },
                        cache: false,
                        success: function (data) {
                            console.log("Call to '/api/ua/users' was successful.");
                            createOrUpdateUserManager.innerHTML = "";
                            createOrUpdateUserManager.add(createOption("", " -- Select Manager --"));
                            $.each(data, function (key, item) {
                                console.log("item:", item);
                                createOrUpdateUserManager.add(createOption(item.UserId, item.DisplayLabel));
                            })
                        }
                    });
                }
            });
        }

        function createOption(value, text) {
            let option = document.createElement("option");
            option.setAttribute("value", value);
            option.textContent = text;
            return option;
        }
    </script>
}